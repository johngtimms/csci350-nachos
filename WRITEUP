Title: Writeup for Assignment 4, Fall 2015
Date:  
Group: Name                 Email
       Nicholas Roubal      nroubal@usc.edu
       Yetsebaot Sisay      sisay@usc.edu
       John Timms           timms@usc.edu

I. Requirements:

    Part 1:



    Part 2:

        

II. Assumptions:

    Part 1:

       We want to create a RPC system that supports all variations of client-server communication. These
       include monolithic user programs, multiple user programs on one Nachos client, and multiple
       Nachos clients. We describe our design to achieve this assumption below.

    Part 2:

        

III. Design:

    Part 1:

        Locks, Conditions, and Monitors have all been changed to support our new assumptions. Previously,
        threads could interact with resources only if they belonged to the process that owned those resources.
        Now resources are not owned, they are simply identified by name. Any thread in any process on any
        machine can interact with a resource. As before, threads make RPCs with a unique mailbox as their
        return address. 

        The mailbox id was previously the concatination of the process and thread ids, now it is the 
        concatination of the machine, process, and thread ids, which will prevent collisions.

    Part 2:

        

IV. Implementation:

    Files Modified:


    Files Added:


    Data Structures Added:


    Functions Added:


    Functions Modified:


V. Testing:

    How To Test:

        Part 1:

    
        Part 2:


VI: Discussion:

    

VII. Miscellaneous:

    
