Title: Writeup for Assignment 4, Fall 2015
Date:  
Group: Name                 Email
       Nicholas Roubal      nroubal@usc.edu
       Yetsebaot Sisay      sisay@usc.edu
       John Timms           timms@usc.edu

I. Requirements:

    Part 1:
	All Passport Office Entities must work together across Nachos clients. It is the server's responsibility 
	to connect the various entities together. User programs are not to know anything about the fact that remote 
	procedure calls are being used. In addition, Nachos clients do not directly talk to each other. All client 
	messages are to go to a Nachos server, and the server connects the clients and user programs.

    Part 2:
	Multiple servers must be able to work together and receive a request from any client. Each server is to only 
	have the locks/CVs/MVs in their table that they create. This means that no server will have a complete set of 
	locks/CVs/MVs. Only all the servers together have all the locks/CVs/MVs.

        

II. Assumptions:

    Part 1:

       We want to create a RPC system that supports all variations of client-server communication. These
       include monolithic user programs, multiple user programs on one Nachos client, and multiple
       Nachos clients. We describe our design to achieve this assumption below.

       Resource names are AT MOST 32 characters long. Attempts to reference a resource with a name longer
       than 32 characters will have indeterminate behavior, since our code will ignore all following chars.


    Part 2:

        Servers are machines 0-4. Clients are machines 5+. 

        Conditions will always be on the same server as their associated Lock.

III. Design:

    Part 1:

        Locks, Conditions, and Monitors have all been changed to support our new assumptions. Previously,
        threads could interact with resources only if they belonged to the process that owned those resources.
        Now resources are not owned, they are simply identified by name. Any thread in any process on any
        machine can interact with a resource. As before, threads make RPCs with a unique mailbox as their
        return address. 

	And a header file was added, setup.h, to the test directory. In here, a function Setup() is implemented to
	setup every lock, condition variable, monitor variable, and struct needed for each user program. Each user program
	will first call Setup() to either create locks/cvs/mvs using names, or retrieve them if they are already created.

The mailbox id was previously the concatenation of the process and thread ids, now it is the 
        concatenation of the machine, process, and thread ids, which will prevent collisions. 


        Instead of clients user programs sending a key to the server to identify a resource, they now
        send a globally unique name. This way the servers in Part 2 will not have to implement a
        key-sharing / non-overlap scheme.

    Part 2:

        When a server cannot handle a RPC because it does not have the resource, it checks with the
        other servers to see if they have the resource and can handle the RPC. It does this by sending
        a message to each server in turn, using the exact same "to" mailbox that a client would use, 
        but it sets the "from" mailbox to the negation of the client's reply-to mailbox. This indicates
        to the receiving server that it's getting a Server-Server message, not a Client-Server message.

        When getting a Server-Server message, the server performs a bit of extra work before performing
        the standard Client-Server work (if it can). Namely, it checks if it can perform the standard
        Client-Server work at all and notifies the server that sent the Server-Server message. To notify
        the sending server, it replies to the appropriate machine id (captured from the post office header)
        and the same Client-Server mailbox plus 100.

        The sending server, knowing that it made a Server-Server call, is paused and listening to the
        plus 100 mailbox for either "yes" or "no". The sending server and the receiving server will then
        perform the appropriate functions as set out in the requirements section above.

IV. Implementation:

    Files Modified:
	userprog/exception.cc
	network/rpcserver.h
	network/rpcserver.cc
	test/networkTests.c


    Files Added:
	test/setup.h
	test/customerstarter.c
	test/clerkstarter.c


    Functions Added:
	Setup() in Setup.h - Initializes all the structs of customers/clerks needed, as well as creating all needed locks,
	condition variables, and monitor variables. And stores the names of all of the locks/cvs/mvs in the struct, so that
	user programs can easily access the locks by name.


    Functions Modified:
	void CreateLock(int name, int index);  - exception.cc
	void DestroyLock(int name, int index); - exception.cc
	void Acquire(int name, int index); - exception.cc
	void Release(int name, int index); - exception.cc
	void CreateCondition(int name, int index); - exception.cc
	void DestroyCondition(int key, int index); - exception.cc
	void Wait(int conditionKey, int conditionIndex, int lockKey, int lockIndex); - exception.cc
	void Signal(int conditionKey, int conditionIndex, int lockKey, int lockIndex); - exception.cc
	void Broadcast(int conditionKey, int conditionIndex, int lockKey, int lockIndex); - exception.cc
	void CreateMV(int name, int index); - exception.cc
	void DestroyMV(int name, int index); - exception.cc
	int GetMV(int name, int index); - exception.cc
	void SetMV(int name, int index, int value); - exception.cc

	 void Receive_CreateLock(); - rpcserver.cc
        void Receive_DestroyLock(); - rpcserver.cc
        void Receive_Acquire(); - rpcserver.cc
        void Receive_Release(); - rpcserver.cc
        void Receive_CreateCondition(); - rpcserver.cc
        void Receive_DestroyCondition(); - rpcserver.cc
        void Receive_Wait(); - rpcserver.cc
        void Receive_Signal(); - rpcserver.cc
        void Receive_Broadcast(); - rpcserver.cc
        void Receive_NetPrint(); - rpcserver.cc
        void Receive_NetHalt(); - rpcserver.cc
        void Receive_CreateMV(); - rpcserver.cc
        void Receive_DestroyMV(); - rpcserver.cc
        void Receive_GetMV(); - rpcserver.cc
        void Receive_SetMV(); - rpcserver.cc
	void RPCServer::Receive_Broadcast() - rpcserver.cc
	bool SendQuery(int mailboxTo, int mailboxFrom, std::string query, char *identifier); - rpcserver.cc


V. Testing:

    How To Test:

        Part 1:
		We well test running the Passport Office simulation with 1 working server, 
		1 client nachos instance that exec’s 5 customers and 2 senators,

		and a 2nd client nachos instance that exec’s 2 application clerks, 2 picture clerks,
		2 passport clerks, 2 cashiers, and 1 manager.

		Testing multiple clients with one server:
		Open three terminal windows, one for the server, and two others for two clients

		Make sure all windows are in the vm directory and run this for the one server:
		nachos --server -m 0 -ns 1
		(this starts the server, indicating machine: #0, number of servers: 1)
		
		In the second terminal window, also in the vm directory, run this first client:
		nachos -x ../test/customerstarter -m 1 -ns 1
		(this starts 5 customers and 2 senators, exec’ing test/customer.c 7 times, using 7 mailboxes,
		1 for each exec’d process)
		(indicating machine: #1, number of servers: 1)

		In the third terminal window, also in the vm directory, run the second client:
		nachos -x ../test/clerkstarter -m 2 -ns 1
		(this starts 2 app clerks, 2 pic clerks, 2 passport clerks, 2 cashiers, 1 manger, using 9 mailboxes,
		1 for each exec’d process)
		(indicating machine: #2, number of servers: 1)

		Expected output: 
		In the server window: 
		SERVER RUNNING - MACHINE NAME IS 0
		SERVER RUNNING - numServers is 1

		In the second terminal window (customerstarter)


=================================================
=========Starting Customers And Senators=========
=================================================
Number of Customers: 5
Number of Senators: 2
Setting up locks/cvs/mvs...
Running Customer: 0
Running Customer: 1
Running Customer: 2
Running Customer: 3
Running Customer: 4
Running Senator: 5
Running Senator: 6
Customer 0 has gotten in regular line for ApplicationClerk 0
Customer 1 has gotten in regular line for ApplicationClerk 0
Customer 2 has gotten in regular line for ApplicationClerk 0
Customer 0 woken up from line
Senator: 6 is going to wait outside because there is a senator inside.
Customer 3 is going outside the Passport Office because there is a Senator present.
Customer 1 woken up from line
Customer 0 is going outside the Passport Office because there is a Senator present.
Customer 4 is going outside the Passport Office because there is a Senator present.
Customer 2 woken up from line
Customer 1 is going outside the Passport Office because there is a Senator present.
Customer 2 is going outside the Passport Office because there is a Senator present.
Senator 5 has gotten in senator line for ApplicationClerk 0
Senator 5 has given SSN 5 to Application Clerk 0
Senator 5 has gotten in senator line for PictureClerk 0
Senator 5 has given SSN 5 to Picture Clerk 0
Senator 5 does like their picture from Picture Clerk 0
Senator 5 has gotten in senator line for PassportClerk 0
Senator 5 has gotten in senator line for Cashier 0
Senator 5 has given Cashier 0 $100
Senator 5 is leaving the Passport Office
Senator 6 has gotten in senator line for ApplicationClerk 0
Senator 6 has given SSN 6 to Application Clerk 0
Senator 6 has gotten in senator line for PictureClerk 0
Senator 6 has given SSN 6 to Picture Clerk 0
Senator 6 does like their picture from Picture Clerk 0
Senator 6 has gotten in senator line for PassportClerk 0
Senator 6 has gotten in senator line for Cashier 0
Senator 6 has given Cashier 0 $100
Senator 6 is leaving the Passport Office
Customer 3 is notified that there are no more senators, and can come in now.
Customer 0 is notified that there are no more senators, and can come in now.
Customer 4 is notified that there are no more senators, and can come in now.
Customer 1 is notified that there are no more senators, and can come in now.
Customer 2 is notified that there are no more senators, and can come in now.
Customer 3 has gotten in regular line for ApplicationClerk 0
Customer 0 has gotten in regular line for ApplicationClerk 0
Customer 4 has gotten in regular line for ApplicationClerk 0
Customer 1 has gotten in regular line for ApplicationClerk 0
Customer 2 has gotten in bribe line for ApplicationClerk 0
Customer 2 has given SSN 2 to Application Clerk 0
Customer 2 has gotten in regular line for PictureClerk 0
Customer 3 woken up from line
Customer 3 has given SSN 3 to Application Clerk 0
Customer 0 woken up from line
Customer 3 has gotten in bribe line for PictureClerk 0
Customer 0 has given SSN 0 to Application Clerk 0
Customer 0 has gotten in regular line for PictureClerk 1
Customer 4 woken up from line
Customer 4 has given SSN 4 to Application Clerk 0
Customer 3 has given SSN 3 to Picture Clerk 0
Customer 3 does like their picture from Picture Clerk 0
Customer 1 woken up from line
Customer 4 has gotten in bribe line for PictureClerk 0
Customer 3 has gotten in regular line for PassportClerk 0
Customer 1 has given SSN 1 to Application Clerk 0
Customer 1 has gotten in bribe line for PictureClerk 0
Customer 4 has given SSN 4 to Picture Clerk 0
Customer 0 has given SSN 0 to Picture Clerk 1
randNumber was 0
Customer 4 does not like their picture from Picture Clerk 0
randNumber was 0
Customer 0 does not like their picture from Picture Clerk 1
Customer 4 has gotten in regular line for PictureClerk 1
Customer 0 has gotten in regular line for PictureClerk 1
Customer 1 has given SSN 1 to Picture Clerk 0
Customer 1 does like their picture from Picture Clerk 0
Customer 3 has gotten in regular line for Cashier 0
Customer 4 has given SSN 4 to Picture Clerk 1
Customer 1 has gotten in regular line for PassportClerk 0
Customer 4 does like their picture from Picture Clerk 1
Customer 4 has gotten in bribe line for PassportClerk 0
Customer 2 has given SSN 2 to Picture Clerk 0
randNumber was 0
Customer 2 does not like their picture from Picture Clerk 0
Customer 0 has given SSN 0 to Picture Clerk 1
Customer 2 has gotten in regular line for PictureClerk 0
Customer 0 does like their picture from Picture Clerk 1
Customer 3 has given Cashier 0 $100
Customer 3 is leaving the Passport Office
Customer 2 has given SSN 2 to Picture Clerk 0
Customer 0 has gotten in regular line for PassportClerk 1
Customer 2 does like their picture from Picture Clerk 0
Customer 2 has gotten in regular line for PassportClerk 0
Customer 4 has gotten in regular line for Cashier 0
Customer 0 has gotten in regular line for Cashier 0
Customer 1 has gotten in bribe line for Cashier 0
Customer 4 has given Cashier 0 $100
Customer 4 is leaving the Passport Office
Customer 2 has gotten in regular line for Cashier 1
Customer 1 has given Cashier 0 $100
Customer 1 is leaving the Passport Office
Customer 2 has given Cashier 1 $100
Customer 2 is leaving the Passport Office
Customer 0 has given Cashier 0 $100
Customer 0 is leaving the Passport Office
=================================================
========FINISHED SIMULATING PASSPORT OFFICE======
=================================================


		
		In the third terminal window (clerkstarter)

=================================================
================Starting Clerks==================
=================================================
Number of ApplicationClerks: 2
Number of PictureClerks: 2
Number of PassportClerks: 2
Number of Cashiers: 2
Number of Managers: 1
Setting up locks/cvs/mvs...
Running Cashier: 0
Running PassportClerk: 0
Running PictureClerk: 0
Running ApplicationClerk: 0
Running Cashier: 1
Running PassportClerk: 1
Running PictureClerk: 1
ApplicationClerk 0 has signalled a Senator to come to their counter
Running ApplicationClerk: 1
Cashier 0 is going on break
PassportClerk 0 is going on break
PictureClerk 0 is going on break
Cashier 1 is going on break
PassportClerk 1 is going on break
PictureClerk 1 is going on break
ApplicationClerk 1 is going on break
ApplicationClerk 0 has recieved SSN 5 from Senator 5
ApplicationClerk 0 has recorded a completed application from Senator 5
ApplicationClerk 0 is going on break
Manager has woken up a PictureClerk
PictureClerk 0 is coming off break
PictureClerk 0 has signalled a Senator to come to their counter
PictureClerk 0 has recieved SSN 5 from Senator 5
PictureClerk 0 has taken a picture of Senator 5
PictureClerk 0 has been told that Senator 5 does like their picture
PictureClerk 0 is going on break
Manager has woken up a PassportClerk
PassportClerk 0 is coming off break
PassportClerk 0 has signalled a Senator to come to their counter
PassportClerk 0 has recieved SSN 5 from Senator 5
PassportClerk 0 has determined that Senator 5 has both their application and picture completed
PassportClerk 0 has recorded Senator 5's passport documentation
PassportClerk 0 is going on break
Manager has woken up a Cashier
Cashier 0 is coming off break
Cashier 0 has signalled a Senator to come to their counter
Cashier 0 has recieved SSN 5 from Senator 5
Cashier 0 has verified that Senator 5 has been certified by a PassportClerk
Cashier 0 has receieved the $100 from Senator 5 after ceritification
Cashier 0 has provided Senator 5 their completed passport
Cashier 0 has recorded that Senator 5 has been given their completed passport.
Cashier 0 is going on break
Manager has woken up an ApplicationClerk
ApplicationClerk 0 is coming off break
ApplicationClerk 0 has signalled a Senator to come to their counter
ApplicationClerk 0 has recieved SSN 6 from Senator 6
ApplicationClerk 0 has recorded a completed application from Senator 6
ApplicationClerk 0 is going on break
Manager has woken up a PictureClerk
PictureClerk 0 is coming off break
PictureClerk 0 has signalled a Senator to come to their counter
PictureClerk 0 has recieved SSN 6 from Senator 6
PictureClerk 0 has taken a picture of Senator 6
PictureClerk 0 has been told that Senator 6 does like their picture
PictureClerk 0 is going on break
Manager has woken up a PassportClerk
PassportClerk 0 is coming off break
PassportClerk 0 has signalled a Senator to come to their counter
PassportClerk 0 has recieved SSN 6 from Senator 6
PassportClerk 0 has determined that Senator 6 has both their application and picture completed
PassportClerk 0 has recorded Senator 6's passport documentation
PassportClerk 0 is going on break
Manager has woken up a Cashier
Cashier 0 is coming off break
Cashier 0 has signalled a Senator to come to their counter
Cashier 0 has recieved SSN 6 from Senator 6
Cashier 0 has verified that Senator 6 has been certified by a PassportClerk
Cashier 0 has receieved the $100 from Senator 6 after ceritification
Cashier 0 has provided Senator 6 their completed passport
Cashier 0 has recorded that Senator 6 has been given their completed passport.
Cashier 0 is going on break
Manager has woken up an ApplicationClerk
ApplicationClerk 0 is coming off break
ApplicationClerk 0 has signalled a Customer to come to their counter
ApplicationClerk 0 has recieved SSN 2 from Customer 2
ApplicationClerk 0 has accepted application from Customer 2
ApplicationClerk 0 has signalled a Customer to come to their counter
ApplicationClerk 0 has recieved SSN 3 from Customer 3
ApplicationClerk 0 has accepted application from Customer 3
ApplicationClerk 0 has signalled a Customer to come to their counter
Manager has woken up a PictureClerk
PictureClerk 0 is coming off break
ApplicationClerk 0 has recieved SSN 0 from Customer 0
ApplicationClerk 0 has accepted application from Customer 0
PictureClerk 0 has signalled a Customer to come to their counter
ApplicationClerk 0 has signalled a Customer to come to their counter
ApplicationClerk 0 has recieved SSN 4 from Customer 4
ApplicationClerk 0 has accepted application from Customer 4
PictureClerk 0 has recieved SSN 3 from Customer 3
PictureClerk 0 has taken a picture of Customer 3
ApplicationClerk 0 has signalled a Customer to come to their counter
PictureClerk 0 has been told that Customer 3 does like their picture
ApplicationClerk 0 has recieved SSN 1 from Customer 1
ApplicationClerk 0 has accepted application from Customer 1
PictureClerk 0 has signalled a Customer to come to their counter
Manager has woken up a PictureClerk
PictureClerk 1 is coming off break
ApplicationClerk 0 is going on break
Manager has woken up a PassportClerk
PictureClerk 1 has signalled a Customer to come to their counter
PassportClerk 0 is coming off break
PassportClerk 0 has signalled a Customer to come to their counter
PictureClerk 0 has recieved SSN 4 from Customer 4
PictureClerk 0 has taken a picture of Customer 4
PictureClerk 1 has recieved SSN 0 from Customer 0
PictureClerk 1 has taken a picture of Customer 0
PictureClerk 0 has been told that Customer 4 does not like their picture
PassportClerk 0 has recieved SSN 3 from Customer 3
PassportClerk 0 has determined that Customer 3 has both their application and picture completed
PictureClerk 1 has been told that Customer 0 does not like their picture
PictureClerk 0 has signalled a Customer to come to their counter
PassportClerk 0 has recorded Customer 3's passport documentation
PictureClerk 1 has signalled a Customer to come to their counter
PictureClerk 0 has recieved SSN 1 from Customer 1
PictureClerk 0 has taken a picture of Customer 1
PassportClerk 0 is going on break
PictureClerk 0 has been told that Customer 1 does like their picture
PictureClerk 1 has recieved SSN 4 from Customer 4
PictureClerk 1 has taken a picture of Customer 4
PictureClerk 1 has been told that Customer 4 does like their picture
Manager has woken up a Cashier
Cashier 0 is coming off break
PictureClerk 0 has signalled a Customer to come to their counter
Cashier 0 has signalled a Customer to come to their counter
PictureClerk 1 has signalled a Customer to come to their counter
PictureClerk 0 has recieved SSN 2 from Customer 2
PictureClerk 0 has taken a picture of Customer 2
Cashier 0 has recieved SSN 3 from Customer 3
Cashier 0 has verified that Customer 3 has been certified by a PassportClerk
Cashier 0 has receieved the $100 from Customer 3 after ceritification
PictureClerk 0 has been told that Customer 2 does not like their picture
Cashier 0 has provided Customer 3 their completed passport
Cashier 0 has recorded that Customer 3 has been given their completed passport.
PictureClerk 1 has recieved SSN 0 from Customer 0
PictureClerk 1 has taken a picture of Customer 0
PictureClerk 0 has signalled a Customer to come to their counter
PictureClerk 1 has been told that Customer 0 does like their picture
Manager has woken up a PassportClerk
PassportClerk 0 is coming off break
Cashier 0 is going on break
PictureClerk 0 has recieved SSN 2 from Customer 2
PictureClerk 0 has taken a picture of Customer 2
PictureClerk 1 is going on break
PassportClerk 0 has signalled a Customer to come to their counter
Manager has woken up a PassportClerk
PictureClerk 0 has been told that Customer 2 does like their picture
PassportClerk 1 is coming off break
PassportClerk 1 has signalled a Customer to come to their counter
PassportClerk 0 has recieved SSN 4 from Customer 4
PassportClerk 0 has determined that Customer 4 has both their application and picture completed
PictureClerk 0 is going on break
PassportClerk 1 has recieved SSN 0 from Customer 0
PassportClerk 1 has determined that Customer 0 has both their application and picture completed
PassportClerk 0 has recorded Customer 4's passport documentation
PassportClerk 1 has recorded Customer 0's passport documentation
PassportClerk 0 has signalled a Customer to come to their counter
PassportClerk 1 is going on break
PassportClerk 0 has recieved SSN 1 from Customer 1
PassportClerk 0 has determined that Customer 1 has both their application and picture completed
Manager has woken up a Cashier
PassportClerk 0 has recorded Customer 1's passport documentation
Cashier 0 is coming off break
Cashier 0 has signalled a Customer to come to their counter
PassportClerk 0 has signalled a Customer to come to their counter
Cashier 0 has recieved SSN 4 from Customer 4
Cashier 0 has verified that Customer 4 has been certified by a PassportClerk
Cashier 0 has receieved the $100 from Customer 4 after ceritification
PassportClerk 0 has recieved SSN 2 from Customer 2
PassportClerk 0 has determined that Customer 2 has both their application and picture completed
Cashier 0 has provided Customer 4 their completed passport
Cashier 0 has recorded that Customer 4 has been given their completed passport.
PassportClerk 0 has recorded Customer 2's passport documentation
Cashier 0 has signalled a Customer to come to their counter
PassportClerk 0 is going on break
Cashier 0 has recieved SSN 1 from Customer 1
Cashier 0 has verified that Customer 1 has been certified by a PassportClerk
Manager has woken up a Cashier
Cashier 0 has receieved the $100 from Customer 1 after ceritification
Cashier 1 is coming off break
Cashier 0 has provided Customer 1 their completed passport
Cashier 0 has recorded that Customer 1 has been given their completed passport.
Cashier 1 has signalled a Customer to come to their counter
Cashier 0 has signalled a Customer to come to their counter
Cashier 1 has recieved SSN 2 from Customer 2
Cashier 1 has verified that Customer 2 has been certified by a PassportClerk
Cashier 1 has receieved the $100 from Customer 2 after ceritification
Cashier 0 has recieved SSN 0 from Customer 0
Cashier 0 has verified that Customer 0 has been certified by a PassportClerk
Cashier 0 has receieved the $100 from Customer 0 after ceritification
Cashier 1 has provided Customer 2 their completed passport
Cashier 1 has recorded that Customer 2 has been given their completed passport.
Cashier 0 has provided Customer 0 their completed passport
Cashier 0 has recorded that Customer 0 has been given their completed passport.
Cashier 1 is going on break
Cashier 0 is going on break
All Customers have left the office.
ApplicationClerk 0 is coming off break
ApplicationClerk 1 is coming off break
ApplicationClerk 0 is leaving the office.
PictureClerk 0 is coming off break
ApplicationClerk 1 is leaving the office.
PictureClerk 0 is leaving the office.
PictureClerk 1 is coming off break
PassportClerk 0 is coming off break
PictureClerk 1 is leaving the office.
PassportClerk 1 is coming off break
PassportClerk 0 is leaving the office.
Cashier 0 is coming off break
PassportClerk 1 is leaving the office.
Cashier 0 is leaving the office.
Final totals:
Manager has counted a total of $500 for ApplicationClerks
Manager has counted a total of $1500 for PictureClerks
Manager has counted a total of $500 for PassportClerks
Manager has counted a total of $1200 for Cashiers
Manager has counted a total of $3700 for the Passport Office
Cashier 1 is coming off break
Cashier 1 is leaving the office.
=================================================
========FINISHED SIMULATING PASSPORT OFFICE======
=================================================


    
        Part 2:
		To test multiple servers (up to 5), create servers using this:
		(-m flag defines machine #, -ns flag defines number of servers that will be used)
		nachos --server -m 0 -ns 5
		nachos --server -m 1 -ns 2
		nachos --server -m 2 -ns 2
		nachos --server -m 3 -ns 2
		nachos --server -m 4 -ns 2
		And test using client:
		nachos -x ../test/networkTests -m 5 -ns 5  
		Expected output: 
		Network Tests
        		NetPrint test (1/1): Check server console for "Hello World!"
      			CreateLock test (1/1): Two locks created
      		        Release test (1/2): Check server console for "WARN: Release ..."
       			Acquire test (1/1): Lock acquired
        		Release test (2/2): Lock released
        		DestroyLock test (1/1): Destroyed two locks
        		CreateCondition test (1/1): One condition created
        		Wait test (1/2): Wait DID release the lock
        		Signal test (1/2): Finished signaling
        		Signal test (2/2): Signal DID release the lock
        		Wait test (2/2): Finished waiting
        		Broadcast test (1/5): Acquired lock to prove waits DID release
        		Broadcast test (?/5): Finished broadcasting
        		Broadcast test (5/5): Broadcast DID release the lock
        		Broadcast test (?/5): Finished waiting
        		DestroyCondition test (1/1): Destroyed one condition
        		Broadcast test (?/5): Finished waiting
        		NetHalt test (1/1): Check that server shuts down
	


VI: Discussion:

    

VII. Miscellaneous:

    
